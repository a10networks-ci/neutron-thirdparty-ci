#!/bin/bash -xe

if [ -z $ZUUL_PROJECT ]; then
    export ZUUL_PROJECT=openstack/neutron
fi
if [ -z $ZUUL_BRANCH ]; then
    export ZUUL_BRANCH=master
fi
export ZUUL_URL=http://zuul.a10cloud.com/p
export PYTHONUNBUFFERED=true
export DEVSTACK_GATE_TIMEOUT=180
export DEVSTACK_GATE_TEMPEST=1
export DEVSTACK_GATE_NEUTRON=1
#export DEVSTACK_GATE_TEMPEST_REGEX='(?!.*\[.*\bslow\b.*\])((network)|(neutron))'
#export DEVSTACK_GATE_TEMPEST_REGEX='(?!.*\[.*\bslow\b.*\])(tempest.api.network|tempest.cli.simple_read_only.test_neutron)(?!.*lbaas_agent)'
export DEVSTACK_GATE_TEMPEST_REGEX='(?!.*\[.*\bslow\b.*\])(tempest.api.network|tempest.cli.simple_read_only.test_neutron)(?!.*(lbaas_agent|test_bulk_create_delete_subnet|test_create_delete_subnet_with|overlap|test_create_delete_subnet_all_attributes|test_update_subnet_gw_dns_host_routes_dhcp|test_create_list_subnet_with_no_gw64_one_network))'
# temporarily disable scenario (expects same neutron subnet)
#export DEVSTACK_GATE_TEMPEST_REGEX='(?!.*\[.*\bslow\b.*\])(alancer|SimpleReadOnlyNeutron|tempest.api.network)(?!.*lbaas_agent)'

#export DEVSTACK_GATE_SMOKE_SERIAL=0
#export DEVSTACK_GATE_TEMPEST_SCENARIO=0
#export DEVSTACK_GATE_NETWORK_API=1
#export DEVSTACK_GATE_TEMPEST_API=0
#export ENABLED_SERVICES=g-api,g-reg,key,n-api,n-crt,n-obj,n-cpu,n-cond,n-sch,n-cauth,rabbit,tempest,mysql,neutron,q-svc,q-agt,q-dhcp,q-l3,q-meta,q-lbaas,q-fwaas,q-vpn

echo "HOSTNAME `hostname`"

$WORKSPACE/neutron-thirdparty-ci/ci-slave-pre-cleanup
$WORKSPACE/neutron-thirdparty-ci/ci-slave-reset-a10

cat devstack-gate/features.yaml \
  | sed -e 's/master\: \[default.*$/master: \[default, ceilometer, glance, horizon, nova, keystone\]/' \
  > /tmp/features.yml
export DEVSTACK_GATE_FEATURE_MATRIX=/tmp/features.yml

# # Modify the gate script to do some custom setup
f=devstack-gate/devstack-vm-gate.sh
cp -f $f $f.copy
sed '/\.\/stack.sh.*$/ i\
  $WORKSPACE/neutron-thirdparty-ci/ci-slave-pre-devstack
  ' $f > $f.new
sed '/\.\/stack.sh.*$/ a\
  $WORKSPACE/neutron-thirdparty-ci/ci-slave-post-devstack
  ' $f.new > $f.new2
sed -e 's/^DEFAULT_CONCURRENCY=.*$/DEFAULT_CONCURRENCY=1/' \
    -e "s@^TOP_DIR=.*@TOP_DIR=$WORKSPACE/devstack-gate@" \
  $f.new2 > $f.new3
sudo cp -f $f.new3 /opt/stack/devstack-vm-gate-thirdparty.sh
sudo chmod a+rwx /opt/stack/devstack-vm-gate-thirdparty.sh

function pre_test_hook {
  cp $WORKSPACE/neutron-thirdparty-ci/local.conf /opt/stack/new/devstack/local.conf
  cp $WORKSPACE/neutron-thirdparty-ci/localrc /opt/stack/new/devstack/localrc
}
export -f pre_test_hook

# function gate_hook {
#   exit 1
# }
# export -f gate_hook

export RE_EXEC=true

sed \
  -e 's/new\/devstack\-gate\/devstack\-vm\-gate\.sh$/devstack-vm-gate-thirdparty.sh/' \
  devstack-gate/devstack-vm-gate-wrap.sh \
  > ./safe-devstack-vm-gate-wrap.sh
#cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
bash ./safe-devstack-vm-gate-wrap.sh
exit $?
